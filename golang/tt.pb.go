// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tt.proto

/*
Package ttproto is a generated protocol buffer package.

It is generated from these files:
	tt.proto

It has these top-level messages:
	Telecast
*/
package ttproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TelecastDeviceType int32

const (
	Telecast_UNKNOWN_DEVICE_TYPE TelecastDeviceType = 0
	Telecast_BGEIGIE_NANO        TelecastDeviceType = 1
	Telecast_SOLARCAST           TelecastDeviceType = 2
	Telecast_TTAPP               TelecastDeviceType = 3
	Telecast_TTNODE              TelecastDeviceType = 4
	Telecast_TTGATE              TelecastDeviceType = 5
	Telecast_TTSERVE             TelecastDeviceType = 6
	Telecast_TTGATEPING          TelecastDeviceType = 7
)

var TelecastDeviceType_name = map[int32]string{
	0: "UNKNOWN_DEVICE_TYPE",
	1: "BGEIGIE_NANO",
	2: "SOLARCAST",
	3: "TTAPP",
	4: "TTNODE",
	5: "TTGATE",
	6: "TTSERVE",
	7: "TTGATEPING",
}
var TelecastDeviceType_value = map[string]int32{
	"UNKNOWN_DEVICE_TYPE": 0,
	"BGEIGIE_NANO":        1,
	"SOLARCAST":           2,
	"TTAPP":               3,
	"TTNODE":              4,
	"TTGATE":              5,
	"TTSERVE":             6,
	"TTGATEPING":          7,
}

func (x TelecastDeviceType) Enum() *TelecastDeviceType {
	p := new(TelecastDeviceType)
	*p = x
	return p
}
func (x TelecastDeviceType) String() string {
	return proto.EnumName(TelecastDeviceType_name, int32(x))
}
func (x *TelecastDeviceType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TelecastDeviceType_value, data, "TelecastDeviceType")
	if err != nil {
		return err
	}
	*x = TelecastDeviceType(value)
	return nil
}
func (TelecastDeviceType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type TelecastReplyType int32

const (
	Telecast_NO_REPLY TelecastReplyType = 0
	Telecast_ALLOWED  TelecastReplyType = 1
)

var TelecastReplyType_name = map[int32]string{
	0: "NO_REPLY",
	1: "ALLOWED",
}
var TelecastReplyType_value = map[string]int32{
	"NO_REPLY": 0,
	"ALLOWED":  1,
}

func (x TelecastReplyType) Enum() *TelecastReplyType {
	p := new(TelecastReplyType)
	*p = x
	return p
}
func (x TelecastReplyType) String() string {
	return proto.EnumName(TelecastReplyType_name, int32(x))
}
func (x *TelecastReplyType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TelecastReplyType_value, data, "TelecastReplyType")
	if err != nil {
		return err
	}
	*x = TelecastReplyType(value)
	return nil
}
func (TelecastReplyType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

type Telecast struct {
	DeviceType                      *TelecastDeviceType `protobuf:"varint,1,opt,name=device_type,json=deviceType,enum=ttproto.TelecastDeviceType" json:"device_type,omitempty"`
	DEPRECATED2017FEBDeviceIDString *string             `protobuf:"bytes,2,opt,name=DEPRECATED2017FEBDeviceIDString" json:"DEPRECATED2017FEBDeviceIDString,omitempty"`
	// This field is actually REQUIRED by ttserve
	DeviceId               *uint32            `protobuf:"varint,3,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	Message                *string            `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
	CapturedAt             *string            `protobuf:"bytes,5,opt,name=captured_at,json=capturedAt" json:"captured_at,omitempty"`
	ReplyType              *TelecastReplyType `protobuf:"varint,6,opt,name=reply_type,json=replyType,enum=ttproto.TelecastReplyType" json:"reply_type,omitempty"`
	DEPRECATED2017FEBValue *uint32            `protobuf:"varint,7,opt,name=DEPRECATED2017FEBValue" json:"DEPRECATED2017FEBValue,omitempty"`
	Latitude               *float32           `protobuf:"fixed32,8,opt,name=latitude" json:"latitude,omitempty"`
	Longitude              *float32           `protobuf:"fixed32,9,opt,name=longitude" json:"longitude,omitempty"`
	Altitude               *int32             `protobuf:"varint,10,opt,name=altitude" json:"altitude,omitempty"`
	BatVoltage             *float32           `protobuf:"fixed32,11,opt,name=bat_voltage,json=batVoltage" json:"bat_voltage,omitempty"`
	BatSoc                 *float32           `protobuf:"fixed32,12,opt,name=bat_soc,json=batSoc" json:"bat_soc,omitempty"`
	WirelessSnr            *float32           `protobuf:"fixed32,13,opt,name=wireless_snr,json=wirelessSnr" json:"wireless_snr,omitempty"`
	EnvTemp                *float32           `protobuf:"fixed32,14,opt,name=env_temp,json=envTemp" json:"env_temp,omitempty"`
	EnvHumid               *float32           `protobuf:"fixed32,15,opt,name=env_humid,json=envHumid" json:"env_humid,omitempty"`
	RelayDevice1           *uint32            `protobuf:"varint,16,opt,name=relay_device1,json=relayDevice1" json:"relay_device1,omitempty"`
	RelayDevice2           *uint32            `protobuf:"varint,17,opt,name=relay_device2,json=relayDevice2" json:"relay_device2,omitempty"`
	RelayDevice3           *uint32            `protobuf:"varint,18,opt,name=relay_device3,json=relayDevice3" json:"relay_device3,omitempty"`
	RelayDevice4           *uint32            `protobuf:"varint,19,opt,name=relay_device4,json=relayDevice4" json:"relay_device4,omitempty"`
	RelayDevice5           *uint32            `protobuf:"varint,20,opt,name=relay_device5,json=relayDevice5" json:"relay_device5,omitempty"`
	Lnd_7318U              *uint32            `protobuf:"varint,21,opt,name=lnd_7318u,json=lnd7318u" json:"lnd_7318u,omitempty"`
	Lnd_7128Ec             *uint32            `protobuf:"varint,22,opt,name=lnd_7128ec,json=lnd7128ec" json:"lnd_7128ec,omitempty"`
	StatsUptimeMinutes     *uint32            `protobuf:"varint,23,opt,name=stats_uptime_minutes,json=statsUptimeMinutes" json:"stats_uptime_minutes,omitempty"`
	StatsAppVersion        *string            `protobuf:"bytes,24,opt,name=stats_app_version,json=statsAppVersion" json:"stats_app_version,omitempty"`
	StatsDeviceParams      *string            `protobuf:"bytes,25,opt,name=stats_device_params,json=statsDeviceParams" json:"stats_device_params,omitempty"`
	StatsTransmittedBytes  *uint32            `protobuf:"varint,26,opt,name=stats_transmitted_bytes,json=statsTransmittedBytes" json:"stats_transmitted_bytes,omitempty"`
	StatsReceivedBytes     *uint32            `protobuf:"varint,27,opt,name=stats_received_bytes,json=statsReceivedBytes" json:"stats_received_bytes,omitempty"`
	StatsOneshots          *uint32            `protobuf:"varint,28,opt,name=stats_oneshots,json=statsOneshots" json:"stats_oneshots,omitempty"`
	StatsCommsResets       *uint32            `protobuf:"varint,29,opt,name=stats_comms_resets,json=statsCommsResets" json:"stats_comms_resets,omitempty"`
	PmsPm01_0              *uint32            `protobuf:"varint,30,opt,name=pms_pm01_0,json=pmsPm010" json:"pms_pm01_0,omitempty"`
	PmsPm02_5              *uint32            `protobuf:"varint,31,opt,name=pms_pm02_5,json=pmsPm025" json:"pms_pm02_5,omitempty"`
	PmsPm10_0              *uint32            `protobuf:"varint,32,opt,name=pms_pm10_0,json=pmsPm100" json:"pms_pm10_0,omitempty"`
	PmsC00_30              *uint32            `protobuf:"varint,33,opt,name=pms_c00_30,json=pmsC0030" json:"pms_c00_30,omitempty"`
	PmsC00_50              *uint32            `protobuf:"varint,34,opt,name=pms_c00_50,json=pmsC0050" json:"pms_c00_50,omitempty"`
	PmsC01_00              *uint32            `protobuf:"varint,35,opt,name=pms_c01_00,json=pmsC0100" json:"pms_c01_00,omitempty"`
	PmsC02_50              *uint32            `protobuf:"varint,36,opt,name=pms_c02_50,json=pmsC0250" json:"pms_c02_50,omitempty"`
	PmsC05_00              *uint32            `protobuf:"varint,37,opt,name=pms_c05_00,json=pmsC0500" json:"pms_c05_00,omitempty"`
	PmsC10_00              *uint32            `protobuf:"varint,38,opt,name=pms_c10_00,json=pmsC1000" json:"pms_c10_00,omitempty"`
	PmsCsecs               *uint32            `protobuf:"varint,39,opt,name=pms_csecs,json=pmsCsecs" json:"pms_csecs,omitempty"`
	OpcPm01_0              *float32           `protobuf:"fixed32,40,opt,name=opc_pm01_0,json=opcPm010" json:"opc_pm01_0,omitempty"`
	OpcPm02_5              *float32           `protobuf:"fixed32,41,opt,name=opc_pm02_5,json=opcPm025" json:"opc_pm02_5,omitempty"`
	OpcPm10_0              *float32           `protobuf:"fixed32,42,opt,name=opc_pm10_0,json=opcPm100" json:"opc_pm10_0,omitempty"`
	OpcC00_38              *uint32            `protobuf:"varint,43,opt,name=opc_c00_38,json=opcC0038" json:"opc_c00_38,omitempty"`
	OpcC00_54              *uint32            `protobuf:"varint,44,opt,name=opc_c00_54,json=opcC0054" json:"opc_c00_54,omitempty"`
	OpcC01_00              *uint32            `protobuf:"varint,45,opt,name=opc_c01_00,json=opcC0100" json:"opc_c01_00,omitempty"`
	OpcC02_10              *uint32            `protobuf:"varint,46,opt,name=opc_c02_10,json=opcC0210" json:"opc_c02_10,omitempty"`
	OpcC05_00              *uint32            `protobuf:"varint,47,opt,name=opc_c05_00,json=opcC0500" json:"opc_c05_00,omitempty"`
	OpcC10_00              *uint32            `protobuf:"varint,48,opt,name=opc_c10_00,json=opcC1000" json:"opc_c10_00,omitempty"`
	OpcCsecs               *uint32            `protobuf:"varint,49,opt,name=opc_csecs,json=opcCsecs" json:"opc_csecs,omitempty"`
	EnvPressure            *float32           `protobuf:"fixed32,50,opt,name=env_pressure,json=envPressure" json:"env_pressure,omitempty"`
	StatsCommsPowerFails   *uint32            `protobuf:"varint,51,opt,name=stats_comms_power_fails,json=statsCommsPowerFails" json:"stats_comms_power_fails,omitempty"`
	BatCurrent             *float32           `protobuf:"fixed32,52,opt,name=bat_current,json=batCurrent" json:"bat_current,omitempty"`
	StatsIccid             *string            `protobuf:"bytes,53,opt,name=stats_iccid,json=statsIccid" json:"stats_iccid,omitempty"`
	StatsMotionEvents      *uint32            `protobuf:"varint,54,opt,name=stats_motion_events,json=statsMotionEvents" json:"stats_motion_events,omitempty"`
	StatsDfu               *string            `protobuf:"bytes,55,opt,name=stats_dfu,json=statsDfu" json:"stats_dfu,omitempty"`
	CapturedAtDate         *uint32            `protobuf:"varint,56,opt,name=captured_at_date,json=capturedAtDate" json:"captured_at_date,omitempty"`
	CapturedAtTime         *uint32            `protobuf:"varint,57,opt,name=captured_at_time,json=capturedAtTime" json:"captured_at_time,omitempty"`
	CapturedAtOffset       *uint32            `protobuf:"varint,58,opt,name=captured_at_offset,json=capturedAtOffset" json:"captured_at_offset,omitempty"`
	StatsOneshotSeconds    *uint32            `protobuf:"varint,59,opt,name=stats_oneshot_seconds,json=statsOneshotSeconds" json:"stats_oneshot_seconds,omitempty"`
	Stamp                  *uint32            `protobuf:"varint,60,opt,name=stamp" json:"stamp,omitempty"`
	StampVersion           *uint32            `protobuf:"varint,61,opt,name=stamp_version,json=stampVersion" json:"stamp_version,omitempty"`
	StatsCpsi              *string            `protobuf:"bytes,62,opt,name=stats_cpsi,json=statsCpsi" json:"stats_cpsi,omitempty"`
	StatsUptimeDays        *uint32            `protobuf:"varint,63,opt,name=stats_uptime_days,json=statsUptimeDays" json:"stats_uptime_days,omitempty"`
	StatsDeviceLabel       *string            `protobuf:"bytes,64,opt,name=stats_device_label,json=statsDeviceLabel" json:"stats_device_label,omitempty"`
	StatsGpsParams         *string            `protobuf:"bytes,65,opt,name=stats_gps_params,json=statsGpsParams" json:"stats_gps_params,omitempty"`
	StatsServiceParams     *string            `protobuf:"bytes,66,opt,name=stats_service_params,json=statsServiceParams" json:"stats_service_params,omitempty"`
	StatsTtnParams         *string            `protobuf:"bytes,67,opt,name=stats_ttn_params,json=statsTtnParams" json:"stats_ttn_params,omitempty"`
	StatsSensorParams      *string            `protobuf:"bytes,68,opt,name=stats_sensor_params,json=statsSensorParams" json:"stats_sensor_params,omitempty"`
	Lnd_7318C              *uint32            `protobuf:"varint,69,opt,name=lnd_7318c,json=lnd7318c" json:"lnd_7318c,omitempty"`
	StatsBattery           *string            `protobuf:"bytes,70,opt,name=stats_battery,json=statsBattery" json:"stats_battery,omitempty"`
	StatsModuleFona        *string            `protobuf:"bytes,71,opt,name=stats_module_fona,json=statsModuleFona" json:"stats_module_fona,omitempty"`
	StatsModuleLora        *string            `protobuf:"bytes,72,opt,name=stats_module_lora,json=statsModuleLora" json:"stats_module_lora,omitempty"`
	Motion                 *bool              `protobuf:"varint,73,opt,name=motion" json:"motion,omitempty"`
	Test                   *bool              `protobuf:"varint,74,opt,name=test" json:"test,omitempty"`
	EncTemp                *float32           `protobuf:"fixed32,75,opt,name=enc_temp,json=encTemp" json:"enc_temp,omitempty"`
	EncHumid               *float32           `protobuf:"fixed32,76,opt,name=enc_humid,json=encHumid" json:"enc_humid,omitempty"`
	EncPressure            *float32           `protobuf:"fixed32,77,opt,name=enc_pressure,json=encPressure" json:"enc_pressure,omitempty"`
	ErrorsOpc              *uint32            `protobuf:"varint,78,opt,name=errors_opc,json=errorsOpc" json:"errors_opc,omitempty"`
	ErrorsPms              *uint32            `protobuf:"varint,79,opt,name=errors_pms,json=errorsPms" json:"errors_pms,omitempty"`
	ErrorsBme0             *uint32            `protobuf:"varint,80,opt,name=errors_bme0,json=errorsBme0" json:"errors_bme0,omitempty"`
	ErrorsBme1             *uint32            `protobuf:"varint,81,opt,name=errors_bme1,json=errorsBme1" json:"errors_bme1,omitempty"`
	ErrorsLora             *uint32            `protobuf:"varint,82,opt,name=errors_lora,json=errorsLora" json:"errors_lora,omitempty"`
	ErrorsFona             *uint32            `protobuf:"varint,83,opt,name=errors_fona,json=errorsFona" json:"errors_fona,omitempty"`
	ErrorsGeiger           *uint32            `protobuf:"varint,84,opt,name=errors_geiger,json=errorsGeiger" json:"errors_geiger,omitempty"`
	ErrorsMax01            *uint32            `protobuf:"varint,85,opt,name=errors_max01,json=errorsMax01" json:"errors_max01,omitempty"`
	ErrorsUgps             *uint32            `protobuf:"varint,86,opt,name=errors_ugps,json=errorsUgps" json:"errors_ugps,omitempty"`
	ErrorsTwi              *uint32            `protobuf:"varint,87,opt,name=errors_twi,json=errorsTwi" json:"errors_twi,omitempty"`
	ErrorsTwiInfo          *string            `protobuf:"bytes,88,opt,name=errors_twi_info,json=errorsTwiInfo" json:"errors_twi_info,omitempty"`
	ErrorsLis              *uint32            `protobuf:"varint,89,opt,name=errors_lis,json=errorsLis" json:"errors_lis,omitempty"`
	ErrorsSpi              *uint32            `protobuf:"varint,90,opt,name=errors_spi,json=errorsSpi" json:"errors_spi,omitempty"`
	ErrorsConnectLora      *uint32            `protobuf:"varint,91,opt,name=errors_connect_lora,json=errorsConnectLora" json:"errors_connect_lora,omitempty"`
	ErrorsConnectFona      *uint32            `protobuf:"varint,92,opt,name=errors_connect_fona,json=errorsConnectFona" json:"errors_connect_fona,omitempty"`
	ErrorsConnectWireless  *uint32            `protobuf:"varint,93,opt,name=errors_connect_wireless,json=errorsConnectWireless" json:"errors_connect_wireless,omitempty"`
	ErrorsConnectData      *uint32            `protobuf:"varint,94,opt,name=errors_connect_data,json=errorsConnectData" json:"errors_connect_data,omitempty"`
	ErrorsConnectService   *uint32            `protobuf:"varint,95,opt,name=errors_connect_service,json=errorsConnectService" json:"errors_connect_service,omitempty"`
	MotionBeganOffset      *uint32            `protobuf:"varint,96,opt,name=motion_began_offset,json=motionBeganOffset" json:"motion_began_offset,omitempty"`
	ErrorsConnectGateway   *uint32            `protobuf:"varint,97,opt,name=errors_connect_gateway,json=errorsConnectGateway" json:"errors_connect_gateway,omitempty"`
	StatsCommsAntFails     *uint32            `protobuf:"varint,98,opt,name=stats_comms_ant_fails,json=statsCommsAntFails" json:"stats_comms_ant_fails,omitempty"`
	Lnd_712U               *uint32            `protobuf:"varint,99,opt,name=lnd_712u,json=lnd712u" json:"lnd_712u,omitempty"`
	Lnd_78017W             *uint32            `protobuf:"varint,100,opt,name=lnd_78017w,json=lnd78017w" json:"lnd_78017w,omitempty"`
	StatsOvercurrentEvents *uint32            `protobuf:"varint,101,opt,name=stats_overcurrent_events,json=statsOvercurrentEvents" json:"stats_overcurrent_events,omitempty"`
	PmsStd01_0             *float32           `protobuf:"fixed32,102,opt,name=pms_std01_0,json=pmsStd010" json:"pms_std01_0,omitempty"`
	PmsStd02_5             *float32           `protobuf:"fixed32,103,opt,name=pms_std02_5,json=pmsStd025" json:"pms_std02_5,omitempty"`
	PmsStd10_0             *float32           `protobuf:"fixed32,104,opt,name=pms_std10_0,json=pmsStd100" json:"pms_std10_0,omitempty"`
	OpcStd01_0             *float32           `protobuf:"fixed32,105,opt,name=opc_std01_0,json=opcStd010" json:"opc_std01_0,omitempty"`
	OpcStd02_5             *float32           `protobuf:"fixed32,106,opt,name=opc_std02_5,json=opcStd025" json:"opc_std02_5,omitempty"`
	OpcStd10_0             *float32           `protobuf:"fixed32,107,opt,name=opc_std10_0,json=opcStd100" json:"opc_std10_0,omitempty"`
	ErrorsMtu              *uint32            `protobuf:"varint,108,opt,name=errors_mtu,json=errorsMtu" json:"errors_mtu,omitempty"`
	StatsSeqno             *uint32            `protobuf:"varint,109,opt,name=stats_seqno,json=statsSeqno" json:"stats_seqno,omitempty"`
	Pms2Pm01_0             *uint32            `protobuf:"varint,110,opt,name=pms2_pm01_0,json=pms2Pm010" json:"pms2_pm01_0,omitempty"`
	Pms2Pm02_5             *uint32            `protobuf:"varint,111,opt,name=pms2_pm02_5,json=pms2Pm025" json:"pms2_pm02_5,omitempty"`
	Pms2Pm10_0             *uint32            `protobuf:"varint,112,opt,name=pms2_pm10_0,json=pms2Pm100" json:"pms2_pm10_0,omitempty"`
	Pms2C00_30             *uint32            `protobuf:"varint,113,opt,name=pms2_c00_30,json=pms2C0030" json:"pms2_c00_30,omitempty"`
	Pms2C00_50             *uint32            `protobuf:"varint,114,opt,name=pms2_c00_50,json=pms2C0050" json:"pms2_c00_50,omitempty"`
	Pms2C01_00             *uint32            `protobuf:"varint,115,opt,name=pms2_c01_00,json=pms2C0100" json:"pms2_c01_00,omitempty"`
	Pms2C02_50             *uint32            `protobuf:"varint,116,opt,name=pms2_c02_50,json=pms2C0250" json:"pms2_c02_50,omitempty"`
	Pms2C05_00             *uint32            `protobuf:"varint,117,opt,name=pms2_c05_00,json=pms2C0500" json:"pms2_c05_00,omitempty"`
	Pms2C10_00             *uint32            `protobuf:"varint,118,opt,name=pms2_c10_00,json=pms2C1000" json:"pms2_c10_00,omitempty"`
	Pms2Csecs              *uint32            `protobuf:"varint,119,opt,name=pms2_csecs,json=pms2Csecs" json:"pms2_csecs,omitempty"`
	ErrorsPms2             *uint32            `protobuf:"varint,120,opt,name=errors_pms2,json=errorsPms2" json:"errors_pms2,omitempty"`
	Pms2Std01_0            *float32           `protobuf:"fixed32,121,opt,name=pms2_std01_0,json=pms2Std010" json:"pms2_std01_0,omitempty"`
	Pms2Std02_5            *float32           `protobuf:"fixed32,122,opt,name=pms2_std02_5,json=pms2Std025" json:"pms2_std02_5,omitempty"`
	Pms2Std10_0            *float32           `protobuf:"fixed32,123,opt,name=pms2_std10_0,json=pms2Std100" json:"pms2_std10_0,omitempty"`
	XXX_unrecognized       []byte             `json:"-"`
}

func (m *Telecast) Reset()                    { *m = Telecast{} }
func (m *Telecast) String() string            { return proto.CompactTextString(m) }
func (*Telecast) ProtoMessage()               {}
func (*Telecast) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Telecast) GetDeviceType() TelecastDeviceType {
	if m != nil && m.DeviceType != nil {
		return *m.DeviceType
	}
	return Telecast_UNKNOWN_DEVICE_TYPE
}

func (m *Telecast) GetDEPRECATED2017FEBDeviceIDString() string {
	if m != nil && m.DEPRECATED2017FEBDeviceIDString != nil {
		return *m.DEPRECATED2017FEBDeviceIDString
	}
	return ""
}

func (m *Telecast) GetDeviceId() uint32 {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return 0
}

func (m *Telecast) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *Telecast) GetCapturedAt() string {
	if m != nil && m.CapturedAt != nil {
		return *m.CapturedAt
	}
	return ""
}

func (m *Telecast) GetReplyType() TelecastReplyType {
	if m != nil && m.ReplyType != nil {
		return *m.ReplyType
	}
	return Telecast_NO_REPLY
}

func (m *Telecast) GetDEPRECATED2017FEBValue() uint32 {
	if m != nil && m.DEPRECATED2017FEBValue != nil {
		return *m.DEPRECATED2017FEBValue
	}
	return 0
}

func (m *Telecast) GetLatitude() float32 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

func (m *Telecast) GetLongitude() float32 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

func (m *Telecast) GetAltitude() int32 {
	if m != nil && m.Altitude != nil {
		return *m.Altitude
	}
	return 0
}

func (m *Telecast) GetBatVoltage() float32 {
	if m != nil && m.BatVoltage != nil {
		return *m.BatVoltage
	}
	return 0
}

func (m *Telecast) GetBatSoc() float32 {
	if m != nil && m.BatSoc != nil {
		return *m.BatSoc
	}
	return 0
}

func (m *Telecast) GetWirelessSnr() float32 {
	if m != nil && m.WirelessSnr != nil {
		return *m.WirelessSnr
	}
	return 0
}

func (m *Telecast) GetEnvTemp() float32 {
	if m != nil && m.EnvTemp != nil {
		return *m.EnvTemp
	}
	return 0
}

func (m *Telecast) GetEnvHumid() float32 {
	if m != nil && m.EnvHumid != nil {
		return *m.EnvHumid
	}
	return 0
}

func (m *Telecast) GetRelayDevice1() uint32 {
	if m != nil && m.RelayDevice1 != nil {
		return *m.RelayDevice1
	}
	return 0
}

func (m *Telecast) GetRelayDevice2() uint32 {
	if m != nil && m.RelayDevice2 != nil {
		return *m.RelayDevice2
	}
	return 0
}

func (m *Telecast) GetRelayDevice3() uint32 {
	if m != nil && m.RelayDevice3 != nil {
		return *m.RelayDevice3
	}
	return 0
}

func (m *Telecast) GetRelayDevice4() uint32 {
	if m != nil && m.RelayDevice4 != nil {
		return *m.RelayDevice4
	}
	return 0
}

func (m *Telecast) GetRelayDevice5() uint32 {
	if m != nil && m.RelayDevice5 != nil {
		return *m.RelayDevice5
	}
	return 0
}

func (m *Telecast) GetLnd_7318U() uint32 {
	if m != nil && m.Lnd_7318U != nil {
		return *m.Lnd_7318U
	}
	return 0
}

func (m *Telecast) GetLnd_7128Ec() uint32 {
	if m != nil && m.Lnd_7128Ec != nil {
		return *m.Lnd_7128Ec
	}
	return 0
}

func (m *Telecast) GetStatsUptimeMinutes() uint32 {
	if m != nil && m.StatsUptimeMinutes != nil {
		return *m.StatsUptimeMinutes
	}
	return 0
}

func (m *Telecast) GetStatsAppVersion() string {
	if m != nil && m.StatsAppVersion != nil {
		return *m.StatsAppVersion
	}
	return ""
}

func (m *Telecast) GetStatsDeviceParams() string {
	if m != nil && m.StatsDeviceParams != nil {
		return *m.StatsDeviceParams
	}
	return ""
}

func (m *Telecast) GetStatsTransmittedBytes() uint32 {
	if m != nil && m.StatsTransmittedBytes != nil {
		return *m.StatsTransmittedBytes
	}
	return 0
}

func (m *Telecast) GetStatsReceivedBytes() uint32 {
	if m != nil && m.StatsReceivedBytes != nil {
		return *m.StatsReceivedBytes
	}
	return 0
}

func (m *Telecast) GetStatsOneshots() uint32 {
	if m != nil && m.StatsOneshots != nil {
		return *m.StatsOneshots
	}
	return 0
}

func (m *Telecast) GetStatsCommsResets() uint32 {
	if m != nil && m.StatsCommsResets != nil {
		return *m.StatsCommsResets
	}
	return 0
}

func (m *Telecast) GetPmsPm01_0() uint32 {
	if m != nil && m.PmsPm01_0 != nil {
		return *m.PmsPm01_0
	}
	return 0
}

func (m *Telecast) GetPmsPm02_5() uint32 {
	if m != nil && m.PmsPm02_5 != nil {
		return *m.PmsPm02_5
	}
	return 0
}

func (m *Telecast) GetPmsPm10_0() uint32 {
	if m != nil && m.PmsPm10_0 != nil {
		return *m.PmsPm10_0
	}
	return 0
}

func (m *Telecast) GetPmsC00_30() uint32 {
	if m != nil && m.PmsC00_30 != nil {
		return *m.PmsC00_30
	}
	return 0
}

func (m *Telecast) GetPmsC00_50() uint32 {
	if m != nil && m.PmsC00_50 != nil {
		return *m.PmsC00_50
	}
	return 0
}

func (m *Telecast) GetPmsC01_00() uint32 {
	if m != nil && m.PmsC01_00 != nil {
		return *m.PmsC01_00
	}
	return 0
}

func (m *Telecast) GetPmsC02_50() uint32 {
	if m != nil && m.PmsC02_50 != nil {
		return *m.PmsC02_50
	}
	return 0
}

func (m *Telecast) GetPmsC05_00() uint32 {
	if m != nil && m.PmsC05_00 != nil {
		return *m.PmsC05_00
	}
	return 0
}

func (m *Telecast) GetPmsC10_00() uint32 {
	if m != nil && m.PmsC10_00 != nil {
		return *m.PmsC10_00
	}
	return 0
}

func (m *Telecast) GetPmsCsecs() uint32 {
	if m != nil && m.PmsCsecs != nil {
		return *m.PmsCsecs
	}
	return 0
}

func (m *Telecast) GetOpcPm01_0() float32 {
	if m != nil && m.OpcPm01_0 != nil {
		return *m.OpcPm01_0
	}
	return 0
}

func (m *Telecast) GetOpcPm02_5() float32 {
	if m != nil && m.OpcPm02_5 != nil {
		return *m.OpcPm02_5
	}
	return 0
}

func (m *Telecast) GetOpcPm10_0() float32 {
	if m != nil && m.OpcPm10_0 != nil {
		return *m.OpcPm10_0
	}
	return 0
}

func (m *Telecast) GetOpcC00_38() uint32 {
	if m != nil && m.OpcC00_38 != nil {
		return *m.OpcC00_38
	}
	return 0
}

func (m *Telecast) GetOpcC00_54() uint32 {
	if m != nil && m.OpcC00_54 != nil {
		return *m.OpcC00_54
	}
	return 0
}

func (m *Telecast) GetOpcC01_00() uint32 {
	if m != nil && m.OpcC01_00 != nil {
		return *m.OpcC01_00
	}
	return 0
}

func (m *Telecast) GetOpcC02_10() uint32 {
	if m != nil && m.OpcC02_10 != nil {
		return *m.OpcC02_10
	}
	return 0
}

func (m *Telecast) GetOpcC05_00() uint32 {
	if m != nil && m.OpcC05_00 != nil {
		return *m.OpcC05_00
	}
	return 0
}

func (m *Telecast) GetOpcC10_00() uint32 {
	if m != nil && m.OpcC10_00 != nil {
		return *m.OpcC10_00
	}
	return 0
}

func (m *Telecast) GetOpcCsecs() uint32 {
	if m != nil && m.OpcCsecs != nil {
		return *m.OpcCsecs
	}
	return 0
}

func (m *Telecast) GetEnvPressure() float32 {
	if m != nil && m.EnvPressure != nil {
		return *m.EnvPressure
	}
	return 0
}

func (m *Telecast) GetStatsCommsPowerFails() uint32 {
	if m != nil && m.StatsCommsPowerFails != nil {
		return *m.StatsCommsPowerFails
	}
	return 0
}

func (m *Telecast) GetBatCurrent() float32 {
	if m != nil && m.BatCurrent != nil {
		return *m.BatCurrent
	}
	return 0
}

func (m *Telecast) GetStatsIccid() string {
	if m != nil && m.StatsIccid != nil {
		return *m.StatsIccid
	}
	return ""
}

func (m *Telecast) GetStatsMotionEvents() uint32 {
	if m != nil && m.StatsMotionEvents != nil {
		return *m.StatsMotionEvents
	}
	return 0
}

func (m *Telecast) GetStatsDfu() string {
	if m != nil && m.StatsDfu != nil {
		return *m.StatsDfu
	}
	return ""
}

func (m *Telecast) GetCapturedAtDate() uint32 {
	if m != nil && m.CapturedAtDate != nil {
		return *m.CapturedAtDate
	}
	return 0
}

func (m *Telecast) GetCapturedAtTime() uint32 {
	if m != nil && m.CapturedAtTime != nil {
		return *m.CapturedAtTime
	}
	return 0
}

func (m *Telecast) GetCapturedAtOffset() uint32 {
	if m != nil && m.CapturedAtOffset != nil {
		return *m.CapturedAtOffset
	}
	return 0
}

func (m *Telecast) GetStatsOneshotSeconds() uint32 {
	if m != nil && m.StatsOneshotSeconds != nil {
		return *m.StatsOneshotSeconds
	}
	return 0
}

func (m *Telecast) GetStamp() uint32 {
	if m != nil && m.Stamp != nil {
		return *m.Stamp
	}
	return 0
}

func (m *Telecast) GetStampVersion() uint32 {
	if m != nil && m.StampVersion != nil {
		return *m.StampVersion
	}
	return 0
}

func (m *Telecast) GetStatsCpsi() string {
	if m != nil && m.StatsCpsi != nil {
		return *m.StatsCpsi
	}
	return ""
}

func (m *Telecast) GetStatsUptimeDays() uint32 {
	if m != nil && m.StatsUptimeDays != nil {
		return *m.StatsUptimeDays
	}
	return 0
}

func (m *Telecast) GetStatsDeviceLabel() string {
	if m != nil && m.StatsDeviceLabel != nil {
		return *m.StatsDeviceLabel
	}
	return ""
}

func (m *Telecast) GetStatsGpsParams() string {
	if m != nil && m.StatsGpsParams != nil {
		return *m.StatsGpsParams
	}
	return ""
}

func (m *Telecast) GetStatsServiceParams() string {
	if m != nil && m.StatsServiceParams != nil {
		return *m.StatsServiceParams
	}
	return ""
}

func (m *Telecast) GetStatsTtnParams() string {
	if m != nil && m.StatsTtnParams != nil {
		return *m.StatsTtnParams
	}
	return ""
}

func (m *Telecast) GetStatsSensorParams() string {
	if m != nil && m.StatsSensorParams != nil {
		return *m.StatsSensorParams
	}
	return ""
}

func (m *Telecast) GetLnd_7318C() uint32 {
	if m != nil && m.Lnd_7318C != nil {
		return *m.Lnd_7318C
	}
	return 0
}

func (m *Telecast) GetStatsBattery() string {
	if m != nil && m.StatsBattery != nil {
		return *m.StatsBattery
	}
	return ""
}

func (m *Telecast) GetStatsModuleFona() string {
	if m != nil && m.StatsModuleFona != nil {
		return *m.StatsModuleFona
	}
	return ""
}

func (m *Telecast) GetStatsModuleLora() string {
	if m != nil && m.StatsModuleLora != nil {
		return *m.StatsModuleLora
	}
	return ""
}

func (m *Telecast) GetMotion() bool {
	if m != nil && m.Motion != nil {
		return *m.Motion
	}
	return false
}

func (m *Telecast) GetTest() bool {
	if m != nil && m.Test != nil {
		return *m.Test
	}
	return false
}

func (m *Telecast) GetEncTemp() float32 {
	if m != nil && m.EncTemp != nil {
		return *m.EncTemp
	}
	return 0
}

func (m *Telecast) GetEncHumid() float32 {
	if m != nil && m.EncHumid != nil {
		return *m.EncHumid
	}
	return 0
}

func (m *Telecast) GetEncPressure() float32 {
	if m != nil && m.EncPressure != nil {
		return *m.EncPressure
	}
	return 0
}

func (m *Telecast) GetErrorsOpc() uint32 {
	if m != nil && m.ErrorsOpc != nil {
		return *m.ErrorsOpc
	}
	return 0
}

func (m *Telecast) GetErrorsPms() uint32 {
	if m != nil && m.ErrorsPms != nil {
		return *m.ErrorsPms
	}
	return 0
}

func (m *Telecast) GetErrorsBme0() uint32 {
	if m != nil && m.ErrorsBme0 != nil {
		return *m.ErrorsBme0
	}
	return 0
}

func (m *Telecast) GetErrorsBme1() uint32 {
	if m != nil && m.ErrorsBme1 != nil {
		return *m.ErrorsBme1
	}
	return 0
}

func (m *Telecast) GetErrorsLora() uint32 {
	if m != nil && m.ErrorsLora != nil {
		return *m.ErrorsLora
	}
	return 0
}

func (m *Telecast) GetErrorsFona() uint32 {
	if m != nil && m.ErrorsFona != nil {
		return *m.ErrorsFona
	}
	return 0
}

func (m *Telecast) GetErrorsGeiger() uint32 {
	if m != nil && m.ErrorsGeiger != nil {
		return *m.ErrorsGeiger
	}
	return 0
}

func (m *Telecast) GetErrorsMax01() uint32 {
	if m != nil && m.ErrorsMax01 != nil {
		return *m.ErrorsMax01
	}
	return 0
}

func (m *Telecast) GetErrorsUgps() uint32 {
	if m != nil && m.ErrorsUgps != nil {
		return *m.ErrorsUgps
	}
	return 0
}

func (m *Telecast) GetErrorsTwi() uint32 {
	if m != nil && m.ErrorsTwi != nil {
		return *m.ErrorsTwi
	}
	return 0
}

func (m *Telecast) GetErrorsTwiInfo() string {
	if m != nil && m.ErrorsTwiInfo != nil {
		return *m.ErrorsTwiInfo
	}
	return ""
}

func (m *Telecast) GetErrorsLis() uint32 {
	if m != nil && m.ErrorsLis != nil {
		return *m.ErrorsLis
	}
	return 0
}

func (m *Telecast) GetErrorsSpi() uint32 {
	if m != nil && m.ErrorsSpi != nil {
		return *m.ErrorsSpi
	}
	return 0
}

func (m *Telecast) GetErrorsConnectLora() uint32 {
	if m != nil && m.ErrorsConnectLora != nil {
		return *m.ErrorsConnectLora
	}
	return 0
}

func (m *Telecast) GetErrorsConnectFona() uint32 {
	if m != nil && m.ErrorsConnectFona != nil {
		return *m.ErrorsConnectFona
	}
	return 0
}

func (m *Telecast) GetErrorsConnectWireless() uint32 {
	if m != nil && m.ErrorsConnectWireless != nil {
		return *m.ErrorsConnectWireless
	}
	return 0
}

func (m *Telecast) GetErrorsConnectData() uint32 {
	if m != nil && m.ErrorsConnectData != nil {
		return *m.ErrorsConnectData
	}
	return 0
}

func (m *Telecast) GetErrorsConnectService() uint32 {
	if m != nil && m.ErrorsConnectService != nil {
		return *m.ErrorsConnectService
	}
	return 0
}

func (m *Telecast) GetMotionBeganOffset() uint32 {
	if m != nil && m.MotionBeganOffset != nil {
		return *m.MotionBeganOffset
	}
	return 0
}

func (m *Telecast) GetErrorsConnectGateway() uint32 {
	if m != nil && m.ErrorsConnectGateway != nil {
		return *m.ErrorsConnectGateway
	}
	return 0
}

func (m *Telecast) GetStatsCommsAntFails() uint32 {
	if m != nil && m.StatsCommsAntFails != nil {
		return *m.StatsCommsAntFails
	}
	return 0
}

func (m *Telecast) GetLnd_712U() uint32 {
	if m != nil && m.Lnd_712U != nil {
		return *m.Lnd_712U
	}
	return 0
}

func (m *Telecast) GetLnd_78017W() uint32 {
	if m != nil && m.Lnd_78017W != nil {
		return *m.Lnd_78017W
	}
	return 0
}

func (m *Telecast) GetStatsOvercurrentEvents() uint32 {
	if m != nil && m.StatsOvercurrentEvents != nil {
		return *m.StatsOvercurrentEvents
	}
	return 0
}

func (m *Telecast) GetPmsStd01_0() float32 {
	if m != nil && m.PmsStd01_0 != nil {
		return *m.PmsStd01_0
	}
	return 0
}

func (m *Telecast) GetPmsStd02_5() float32 {
	if m != nil && m.PmsStd02_5 != nil {
		return *m.PmsStd02_5
	}
	return 0
}

func (m *Telecast) GetPmsStd10_0() float32 {
	if m != nil && m.PmsStd10_0 != nil {
		return *m.PmsStd10_0
	}
	return 0
}

func (m *Telecast) GetOpcStd01_0() float32 {
	if m != nil && m.OpcStd01_0 != nil {
		return *m.OpcStd01_0
	}
	return 0
}

func (m *Telecast) GetOpcStd02_5() float32 {
	if m != nil && m.OpcStd02_5 != nil {
		return *m.OpcStd02_5
	}
	return 0
}

func (m *Telecast) GetOpcStd10_0() float32 {
	if m != nil && m.OpcStd10_0 != nil {
		return *m.OpcStd10_0
	}
	return 0
}

func (m *Telecast) GetErrorsMtu() uint32 {
	if m != nil && m.ErrorsMtu != nil {
		return *m.ErrorsMtu
	}
	return 0
}

func (m *Telecast) GetStatsSeqno() uint32 {
	if m != nil && m.StatsSeqno != nil {
		return *m.StatsSeqno
	}
	return 0
}

func (m *Telecast) GetPms2Pm01_0() uint32 {
	if m != nil && m.Pms2Pm01_0 != nil {
		return *m.Pms2Pm01_0
	}
	return 0
}

func (m *Telecast) GetPms2Pm02_5() uint32 {
	if m != nil && m.Pms2Pm02_5 != nil {
		return *m.Pms2Pm02_5
	}
	return 0
}

func (m *Telecast) GetPms2Pm10_0() uint32 {
	if m != nil && m.Pms2Pm10_0 != nil {
		return *m.Pms2Pm10_0
	}
	return 0
}

func (m *Telecast) GetPms2C00_30() uint32 {
	if m != nil && m.Pms2C00_30 != nil {
		return *m.Pms2C00_30
	}
	return 0
}

func (m *Telecast) GetPms2C00_50() uint32 {
	if m != nil && m.Pms2C00_50 != nil {
		return *m.Pms2C00_50
	}
	return 0
}

func (m *Telecast) GetPms2C01_00() uint32 {
	if m != nil && m.Pms2C01_00 != nil {
		return *m.Pms2C01_00
	}
	return 0
}

func (m *Telecast) GetPms2C02_50() uint32 {
	if m != nil && m.Pms2C02_50 != nil {
		return *m.Pms2C02_50
	}
	return 0
}

func (m *Telecast) GetPms2C05_00() uint32 {
	if m != nil && m.Pms2C05_00 != nil {
		return *m.Pms2C05_00
	}
	return 0
}

func (m *Telecast) GetPms2C10_00() uint32 {
	if m != nil && m.Pms2C10_00 != nil {
		return *m.Pms2C10_00
	}
	return 0
}

func (m *Telecast) GetPms2Csecs() uint32 {
	if m != nil && m.Pms2Csecs != nil {
		return *m.Pms2Csecs
	}
	return 0
}

func (m *Telecast) GetErrorsPms2() uint32 {
	if m != nil && m.ErrorsPms2 != nil {
		return *m.ErrorsPms2
	}
	return 0
}

func (m *Telecast) GetPms2Std01_0() float32 {
	if m != nil && m.Pms2Std01_0 != nil {
		return *m.Pms2Std01_0
	}
	return 0
}

func (m *Telecast) GetPms2Std02_5() float32 {
	if m != nil && m.Pms2Std02_5 != nil {
		return *m.Pms2Std02_5
	}
	return 0
}

func (m *Telecast) GetPms2Std10_0() float32 {
	if m != nil && m.Pms2Std10_0 != nil {
		return *m.Pms2Std10_0
	}
	return 0
}

func init() {
	proto.RegisterType((*Telecast)(nil), "ttproto.Telecast")
	proto.RegisterEnum("ttproto.TelecastDeviceType", TelecastDeviceType_name, TelecastDeviceType_value)
	proto.RegisterEnum("ttproto.TelecastReplyType", TelecastReplyType_name, TelecastReplyType_value)
}

func init() { proto.RegisterFile("tt.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1927 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x98, 0xfd, 0x5f, 0xdb, 0xc8,
	0xf1, 0xc7, 0xcf, 0xb9, 0x24, 0x98, 0x05, 0x12, 0xdf, 0xe6, 0x81, 0xc9, 0x25, 0x24, 0x24, 0xb9,
	0xcb, 0x97, 0xef, 0xf5, 0x4a, 0x25, 0x81, 0x13, 0x7a, 0xed, 0xb5, 0x35, 0xd8, 0x21, 0xf4, 0x00,
	0xbb, 0xb6, 0x43, 0x9a, 0x3e, 0xa9, 0x42, 0x5e, 0x1c, 0xb5, 0xd6, 0x43, 0xb4, 0x6b, 0x73, 0x6e,
	0x7f, 0xef, 0x9f, 0xd5, 0xbf, 0xad, 0xaf, 0x9d, 0x59, 0x59, 0x6b, 0x9c, 0xbe, 0xfa, 0x9b, 0x35,
	0xef, 0xcf, 0xcc, 0x6a, 0x47, 0xbb, 0x33, 0x03, 0xac, 0xaa, 0xd4, 0x76, 0x96, 0xa7, 0x2a, 0xe5,
	0x4b, 0x4a, 0xe1, 0x8f, 0x67, 0xff, 0xfe, 0x8a, 0x55, 0xfb, 0x62, 0x24, 0xc2, 0x40, 0x2a, 0xfe,
	0x3d, 0x5b, 0x19, 0x88, 0x49, 0x14, 0x0a, 0x5f, 0x4d, 0x33, 0x01, 0x95, 0xcd, 0xca, 0xd6, 0x2d,
	0xef, 0xd1, 0xb6, 0xd1, 0x6e, 0x17, 0xba, 0x6d, 0x12, 0xf5, 0xa7, 0x99, 0xe8, 0xb2, 0xf2, 0x37,
	0x7f, 0xc3, 0x9e, 0x34, 0x5b, 0x9d, 0x6e, 0xeb, 0xa0, 0xd1, 0x6f, 0x35, 0x3d, 0xc7, 0x7d, 0xf5,
	0xba, 0xb5, 0xdf, 0x44, 0x7c, 0xd4, 0xec, 0xa9, 0x3c, 0x4a, 0x86, 0x70, 0x6d, 0xb3, 0xb2, 0xb5,
	0xdc, 0xfd, 0x5f, 0x32, 0xfe, 0x90, 0x2d, 0x9b, 0x17, 0x89, 0x06, 0xf0, 0xf9, 0x66, 0x65, 0x6b,
	0xad, 0x5b, 0x25, 0xc3, 0xd1, 0x80, 0x03, 0x5b, 0x8a, 0x85, 0x94, 0xc1, 0x50, 0xc0, 0x75, 0x0c,
	0x57, 0x3c, 0xf2, 0x27, 0x6c, 0x25, 0x0c, 0x32, 0x35, 0xce, 0xc5, 0xc0, 0x0f, 0x14, 0xdc, 0x40,
	0xca, 0x0a, 0x53, 0x43, 0xf1, 0xef, 0x18, 0xcb, 0x45, 0x36, 0x9a, 0xd2, 0xfe, 0x6e, 0xe2, 0xfe,
	0x1e, 0x2e, 0xee, 0x0f, 0x35, 0xb8, 0xbd, 0xe5, 0xd9, 0x4f, 0xfe, 0x92, 0xdd, 0x5f, 0x78, 0xed,
	0xb3, 0x60, 0x34, 0x16, 0xb0, 0x84, 0x2f, 0xf8, 0x5f, 0x28, 0xff, 0x92, 0x55, 0x47, 0x81, 0x8a,
	0xd4, 0x78, 0x20, 0xa0, 0xba, 0x59, 0xd9, 0xba, 0xd6, 0x9d, 0x3d, 0xf3, 0x47, 0x6c, 0x79, 0x94,
	0x26, 0x43, 0x82, 0xcb, 0x08, 0x4b, 0x83, 0xf6, 0x0c, 0x46, 0xc6, 0x93, 0x6d, 0x56, 0xb6, 0x6e,
	0x74, 0x67, 0xcf, 0x7a, 0xab, 0xe7, 0x81, 0xf2, 0x27, 0xe9, 0x48, 0xe9, 0x44, 0xac, 0xa0, 0x2f,
	0x3b, 0x0f, 0xd4, 0x19, 0x59, 0xf8, 0x3a, 0x5b, 0xd2, 0x02, 0x99, 0x86, 0xb0, 0x8a, 0xf0, 0xe6,
	0x79, 0xa0, 0x7a, 0x69, 0xc8, 0x9f, 0xb2, 0xd5, 0xcb, 0x28, 0x17, 0x23, 0x21, 0xa5, 0x2f, 0x93,
	0x1c, 0xd6, 0x90, 0xae, 0x14, 0xb6, 0x5e, 0x92, 0xf3, 0x07, 0xac, 0x2a, 0x92, 0x89, 0xaf, 0x44,
	0x9c, 0xc1, 0x2d, 0xc4, 0x4b, 0x22, 0x99, 0xf4, 0x45, 0x9c, 0xe9, 0x2f, 0xa3, 0xd1, 0x87, 0x71,
	0x1c, 0x0d, 0xe0, 0x36, 0x6d, 0x47, 0x24, 0x93, 0x37, 0xfa, 0x99, 0x3f, 0x67, 0x6b, 0xb9, 0x18,
	0x05, 0x53, 0x9f, 0xbe, 0x95, 0x0b, 0x35, 0xcc, 0xcc, 0x2a, 0x1a, 0xe9, 0x13, 0xbb, 0x57, 0x45,
	0x1e, 0x7c, 0xb1, 0x20, 0xf2, 0xae, 0x8a, 0x76, 0x80, 0x2f, 0x88, 0x76, 0xae, 0x8a, 0x76, 0xe1,
	0xce, 0x82, 0x68, 0xf7, 0xaa, 0xa8, 0x0e, 0x77, 0x17, 0x44, 0x75, 0xbd, 0xab, 0x51, 0x32, 0xf0,
	0x5f, 0xed, 0xb8, 0x7b, 0x63, 0xb8, 0x47, 0xe7, 0x6d, 0x94, 0x0c, 0xf0, 0x99, 0x6f, 0x30, 0x86,
	0xd0, 0xf5, 0xf6, 0x44, 0x08, 0xf7, 0x91, 0x6a, 0x39, 0x19, 0xb8, 0xc3, 0xee, 0x4a, 0x15, 0x28,
	0xe9, 0x8f, 0x33, 0x15, 0xc5, 0xc2, 0x8f, 0xa3, 0x64, 0xac, 0x84, 0x84, 0x75, 0x14, 0x72, 0x64,
	0x6f, 0x11, 0x9d, 0x10, 0xe1, 0xdf, 0xb0, 0x2f, 0xc8, 0x23, 0xc8, 0x32, 0x7f, 0x22, 0x72, 0x19,
	0xa5, 0x09, 0x00, 0x1e, 0xd6, 0xdb, 0x08, 0x1a, 0x59, 0x76, 0x46, 0x66, 0xbe, 0xcd, 0xee, 0x90,
	0xd6, 0xdc, 0x87, 0x2c, 0xc8, 0x83, 0x58, 0xc2, 0x03, 0x54, 0x53, 0x18, 0xda, 0x44, 0x07, 0x01,
	0x7f, 0xc9, 0xd6, 0x49, 0xaf, 0xf2, 0x20, 0x91, 0x71, 0xa4, 0x94, 0x18, 0xf8, 0xe7, 0x53, 0xfd,
	0x42, 0x5f, 0xe2, 0x0b, 0xdd, 0x43, 0xdc, 0x2f, 0xe9, 0xbe, 0x86, 0xe5, 0x2e, 0x72, 0x11, 0x8a,
	0x68, 0x32, 0x73, 0x7a, 0x68, 0xed, 0xa2, 0x6b, 0x10, 0x79, 0x7c, 0xcd, 0x6e, 0x91, 0x47, 0x9a,
	0x08, 0xf9, 0x21, 0x55, 0x12, 0x1e, 0xa1, 0x76, 0x0d, 0xad, 0x6d, 0x63, 0xe4, 0xdf, 0x32, 0x72,
	0xf6, 0xc3, 0x34, 0x8e, 0x75, 0x78, 0x29, 0x94, 0x84, 0x0d, 0x94, 0xd6, 0x90, 0x1c, 0x68, 0xd0,
	0x45, 0x3b, 0x7f, 0xc4, 0x58, 0x16, 0x4b, 0x3f, 0x8b, 0x1d, 0xd7, 0x77, 0xe0, 0x31, 0x7d, 0x89,
	0x2c, 0x96, 0x9d, 0xd8, 0x71, 0x1d, 0x8b, 0x7a, 0x7e, 0x1d, 0x9e, 0xd8, 0xd4, 0xab, 0x97, 0xd4,
	0x75, 0x7c, 0x07, 0x36, 0x2d, 0xea, 0x3a, 0x33, 0xdf, 0xd0, 0x71, 0xfc, 0x1d, 0x07, 0x9e, 0xce,
	0xe8, 0x81, 0xe3, 0xec, 0xcc, 0xd1, 0xba, 0x03, 0xcf, 0x6c, 0x5a, 0xb7, 0xa8, 0xeb, 0x3b, 0x0e,
	0x3c, 0xb7, 0xe8, 0x5c, 0x64, 0x4f, 0xfb, 0x7e, 0x65, 0x51, 0xcf, 0xf6, 0xad, 0x6b, 0xdf, 0xaf,
	0x2d, 0x5a, 0xb7, 0x7c, 0xf5, 0x2b, 0x3b, 0xf0, 0xa2, 0xa4, 0xae, 0xe3, 0x38, 0xfa, 0x58, 0x22,
	0x95, 0x22, 0x94, 0xf0, 0x7f, 0x25, 0xd4, 0xcf, 0xda, 0x35, 0xcd, 0xc2, 0x22, 0x55, 0x5b, 0x74,
	0x15, 0xd3, 0x2c, 0x9c, 0xa5, 0xca, 0x50, 0x9d, 0xaa, 0xff, 0xb7, 0x29, 0xa5, 0x8a, 0x28, 0xa6,
	0xea, 0x1b, 0x8b, 0x9a, 0x0d, 0x69, 0x8a, 0xa9, 0xda, 0x83, 0x9f, 0xd0, 0xba, 0x69, 0x16, 0xea,
	0x54, 0xed, 0xd9, 0xb4, 0xbe, 0x0b, 0xdf, 0xda, 0xb4, 0xbe, 0x5b, 0x52, 0x4c, 0xd5, 0x4f, 0x2d,
	0x3a, 0x17, 0xd9, 0xf3, 0x5d, 0x07, 0xb6, 0x2d, 0xea, 0xb9, 0x16, 0xc5, 0x54, 0xfd, 0xcc, 0xa2,
	0x75, 0xcb, 0x97, 0x52, 0xe5, 0x94, 0xb4, 0x48, 0x15, 0x52, 0x4c, 0x95, 0x5b, 0x42, 0x4c, 0xd5,
	0x53, 0xb6, 0xaa, 0x8b, 0x56, 0x96, 0x0b, 0x29, 0xc7, 0xb9, 0x00, 0x8f, 0x4a, 0x9e, 0x48, 0x26,
	0x1d, 0x63, 0xe2, 0xf5, 0xe2, 0xde, 0xd0, 0x31, 0xcd, 0xd2, 0x4b, 0x91, 0xfb, 0x17, 0x41, 0x34,
	0x92, 0xb0, 0x83, 0xd1, 0xee, 0x96, 0x67, 0xb5, 0xa3, 0xe1, 0x6b, 0xcd, 0x8a, 0x32, 0x1c, 0x8e,
	0xf3, 0x5c, 0x24, 0x0a, 0x76, 0x67, 0x65, 0xf8, 0x80, 0x2c, 0x5a, 0x40, 0x71, 0xa3, 0x30, 0x8c,
	0x06, 0x50, 0xa7, 0x96, 0x84, 0xa6, 0x23, 0x6d, 0x29, 0x2f, 0x78, 0x9c, 0xaa, 0x28, 0x4d, 0x7c,
	0x31, 0x11, 0x89, 0x92, 0xf0, 0x12, 0x17, 0xa5, 0x0b, 0x7e, 0x82, 0xa4, 0x85, 0x40, 0x6f, 0xd4,
	0x14, 0x84, 0x8b, 0x31, 0xbc, 0xc2, 0x70, 0x55, 0x2a, 0x03, 0x17, 0x63, 0xbe, 0xc5, 0x6a, 0x56,
	0x03, 0xf4, 0x07, 0x81, 0x12, 0xb0, 0x87, 0x91, 0x6e, 0x95, 0x5d, 0xb0, 0x19, 0x28, 0x71, 0x55,
	0xa9, 0xcb, 0x13, 0xfc, 0xfc, 0xaa, 0xb2, 0x1f, 0xc5, 0x42, 0x5f, 0x60, 0x5b, 0x99, 0x5e, 0x5c,
	0x48, 0xa1, 0xe0, 0x3b, 0xba, 0xc0, 0xa5, 0xb6, 0x8d, 0x76, 0xee, 0xb1, 0x7b, 0x73, 0x55, 0xc1,
	0x97, 0x22, 0x4c, 0x93, 0x81, 0x84, 0x5f, 0xa0, 0xc3, 0x1d, 0xbb, 0x38, 0xf4, 0x08, 0xf1, 0xbb,
	0xec, 0x86, 0x54, 0x41, 0x9c, 0xc1, 0x2f, 0x51, 0x43, 0x0f, 0xba, 0x70, 0xe3, 0x8f, 0x59, 0x85,
	0xfc, 0x9e, 0x0a, 0x37, 0x1a, 0x8b, 0xf2, 0xb8, 0xc1, 0x98, 0xf9, 0x6c, 0x99, 0x8c, 0xe0, 0x57,
	0x98, 0x0e, 0xca, 0xcf, 0x41, 0x26, 0xa3, 0xb2, 0xd2, 0x9a, 0xda, 0x3c, 0x08, 0xa6, 0x12, 0x7e,
	0x8d, 0x71, 0x6e, 0x5b, 0x85, 0xb9, 0x19, 0x4c, 0xad, 0x42, 0x65, 0x2a, 0xed, 0x28, 0x38, 0x17,
	0x23, 0xf8, 0x0d, 0x86, 0xac, 0x59, 0x85, 0xf6, 0x58, 0xdb, 0x75, 0xfe, 0x48, 0x3d, 0xcc, 0x64,
	0x51, 0x94, 0x1b, 0xa8, 0xa5, 0xaa, 0x78, 0x98, 0x49, 0x53, 0x91, 0x67, 0x95, 0x55, 0x8a, 0xdc,
	0x2e, 0xe1, 0xfb, 0xa8, 0xa6, 0x35, 0x7b, 0x84, 0x8c, 0xc7, 0x2c, 0xb6, 0x52, 0x49, 0xa1, 0x3e,
	0xb0, 0x62, 0xf7, 0x55, 0x62, 0x94, 0xb3, 0xc3, 0x23, 0x45, 0x22, 0xd3, 0xbc, 0x10, 0x37, 0xad,
	0xee, 0xd0, 0x43, 0x62, 0xf4, 0x56, 0x9f, 0x0b, 0xa1, 0x35, 0xd7, 0xe7, 0x42, 0x93, 0x70, 0x25,
	0xfd, 0xf3, 0x40, 0x29, 0x91, 0x4f, 0xe1, 0x35, 0x86, 0x59, 0x45, 0xe3, 0x3e, 0xd9, 0xca, 0x8c,
	0xc6, 0xe9, 0x60, 0x3c, 0x12, 0xfe, 0x45, 0x9a, 0x04, 0x70, 0x68, 0xf5, 0xae, 0x13, 0xb4, 0xbf,
	0x4e, 0x93, 0x60, 0x41, 0x3b, 0x4a, 0xf3, 0x00, 0xde, 0x2c, 0x68, 0x8f, 0xd3, 0x3c, 0xe0, 0xf7,
	0xd9, 0x4d, 0xba, 0x00, 0x70, 0xb4, 0x59, 0xd9, 0xaa, 0x76, 0xcd, 0x13, 0xe7, 0xec, 0xba, 0x12,
	0x52, 0xc1, 0x6f, 0xd1, 0x8a, 0xbf, 0x69, 0x3c, 0x09, 0x69, 0x3c, 0xf9, 0xa1, 0x18, 0x4f, 0xc2,
	0x72, 0x3c, 0x09, 0xcd, 0x78, 0x72, 0x5c, 0x8c, 0x27, 0x21, 0x8d, 0x27, 0x58, 0x06, 0xc2, 0xb2,
	0x0c, 0x9c, 0x14, 0x65, 0x20, 0x9c, 0x95, 0x81, 0x0d, 0xc6, 0x44, 0x9e, 0xa7, 0xb9, 0xf4, 0xd3,
	0x2c, 0x84, 0x53, 0xea, 0xf5, 0x64, 0x69, 0x67, 0xa1, 0x85, 0xb3, 0x58, 0x42, 0xdb, 0xc6, 0x9d,
	0x18, 0xab, 0x81, 0xc1, 0xe7, 0xb1, 0x70, 0xa0, 0x83, 0xdc, 0x78, 0xec, 0xc7, 0xc2, 0x99, 0x17,
	0xb8, 0xf0, 0xbb, 0x2b, 0x02, 0xd7, 0x12, 0x60, 0xb2, 0xba, 0xb6, 0x00, 0xf3, 0x54, 0x0a, 0x30,
	0xf3, 0x3d, 0x5b, 0x80, 0x49, 0x7f, 0xce, 0xd6, 0x8c, 0x60, 0x28, 0xa2, 0xa1, 0xc8, 0xa1, 0x4f,
	0xd7, 0x86, 0x8c, 0x87, 0x68, 0xc3, 0x4c, 0x90, 0x28, 0x0e, 0x7e, 0x74, 0x5c, 0x78, 0x8b, 0x1a,
	0x13, 0xf9, 0x44, 0x9b, 0xac, 0x85, 0xc6, 0xc3, 0x4c, 0xc2, 0x99, 0xbd, 0xd0, 0xdb, 0x61, 0x26,
	0xad, 0x5c, 0xa8, 0xcb, 0x08, 0xde, 0xd9, 0xb9, 0xe8, 0x5f, 0x46, 0xfc, 0x05, 0xbb, 0x5d, 0x62,
	0x3f, 0x4a, 0x2e, 0x52, 0xf8, 0x3d, 0x7e, 0xfa, 0xb5, 0x99, 0xe6, 0x28, 0xb9, 0x48, 0xad, 0x30,
	0xa3, 0x48, 0xc2, 0x7b, 0x3b, 0xcc, 0x71, 0x64, 0xaf, 0x22, 0xb3, 0x08, 0xfe, 0x60, 0xe3, 0x5e,
	0x16, 0xe9, 0x0b, 0x60, 0x70, 0x98, 0x26, 0x89, 0x08, 0x15, 0xe5, 0xed, 0x8f, 0x54, 0x3d, 0x09,
	0x1d, 0x10, 0xc1, 0xf4, 0x2d, 0xea, 0x31, 0x8d, 0x7f, 0xfa, 0x84, 0x1e, 0xb3, 0xf9, 0x92, 0xad,
	0x5f, 0xd1, 0x17, 0x73, 0x32, 0xfc, 0x99, 0xc6, 0xa9, 0x39, 0x9f, 0x77, 0x06, 0x7e, 0x62, 0x9d,
	0x41, 0xa0, 0x02, 0xf8, 0xcb, 0x27, 0xd6, 0x69, 0x06, 0x2a, 0xe0, 0xbb, 0xec, 0xfe, 0x15, 0xbd,
	0xa9, 0x16, 0xe0, 0x53, 0xf7, 0x99, 0x73, 0x31, 0xe5, 0x42, 0xaf, 0x62, 0xba, 0xc6, 0xb9, 0x18,
	0x06, 0x49, 0x51, 0x9b, 0xff, 0x4a, 0xab, 0x10, 0xda, 0xd7, 0xc4, 0x14, 0xe7, 0xc5, 0x55, 0x86,
	0x81, 0x12, 0x97, 0xc1, 0x14, 0x82, 0x4f, 0xac, 0x72, 0x48, 0x8c, 0xbb, 0x45, 0x49, 0xa7, 0xd6,
	0x18, 0x24, 0xca, 0x34, 0xc6, 0x73, 0x6b, 0x36, 0xc4, 0xc6, 0xd8, 0x48, 0x14, 0xb5, 0xc5, 0x07,
	0xac, 0x6a, 0x46, 0xe6, 0x31, 0x84, 0xa8, 0x5a, 0xa2, 0x81, 0xb9, 0x9c, 0xa6, 0xf7, 0x1c, 0xf7,
	0xd5, 0x25, 0x0c, 0xca, 0x69, 0x1a, 0x0d, 0x7c, 0x8f, 0x81, 0xe9, 0x1f, 0x13, 0x91, 0x9b, 0xb6,
	0x5a, 0xf4, 0x44, 0x41, 0x7f, 0x67, 0x51, 0x0b, 0x29, 0xb1, 0x69, 0x8c, 0x8f, 0xd9, 0x8a, 0x1e,
	0x96, 0xa4, 0x1a, 0xe0, 0x40, 0x74, 0x41, 0x7f, 0x4d, 0x65, 0xb1, 0xec, 0x69, 0x8b, 0x63, 0x73,
	0x3d, 0x12, 0x0d, 0xe7, 0xb8, 0x57, 0xb7, 0x38, 0x0e, 0x45, 0x1f, 0x6c, 0xae, 0x67, 0x97, 0xc7,
	0x6c, 0x45, 0x4f, 0x18, 0x45, 0xfc, 0x88, 0x78, 0x9a, 0x85, 0x65, 0xfc, 0x82, 0xeb, 0xf8, 0x7f,
	0x9b, 0xe3, 0x14, 0xdf, 0x70, 0x8c, 0xff, 0x77, 0x9b, 0xeb, 0xf8, 0xe5, 0x49, 0x8f, 0xd5, 0x18,
	0x46, 0xf6, 0x49, 0x3f, 0x51, 0xe3, 0x72, 0x90, 0x90, 0xe2, 0x63, 0x92, 0x42, 0x4c, 0xf7, 0xd1,
	0x94, 0xf8, 0x8f, 0x49, 0x6a, 0xde, 0xdf, 0x2b, 0x06, 0xc2, 0x84, 0x02, 0x68, 0x13, 0x4d, 0x84,
	0x16, 0xd7, 0xef, 0x97, 0xce, 0xf1, 0xd9, 0xfe, 0xbd, 0x62, 0x28, 0xcc, 0x6c, 0x6e, 0xf6, 0x8f,
	0xdc, 0x4c, 0xd0, 0x1f, 0x4b, 0x4e, 0x23, 0xb4, 0xcd, 0xeb, 0x0e, 0xe4, 0x73, 0xbc, 0x6e, 0x73,
	0x1c, 0x0d, 0xa5, 0xcd, 0xe7, 0xe3, 0xe3, 0x1c, 0xad, 0x6c, 0xee, 0xcd, 0xf9, 0xe3, 0x78, 0x38,
	0xb6, 0x79, 0xdd, 0xf6, 0xa7, 0x01, 0x71, 0x62, 0x71, 0x9c, 0x10, 0x37, 0x70, 0xd4, 0xf6, 0xcc,
	0x88, 0x78, 0x69, 0x61, 0x9c, 0x11, 0xcb, 0x7a, 0xa7, 0x6d, 0xf0, 0xa3, 0x5d, 0xef, 0x3a, 0xb1,
	0xf4, 0xf8, 0x26, 0x5b, 0x45, 0xff, 0xe2, 0x00, 0x4c, 0x69, 0xd6, 0xd3, 0x36, 0x73, 0x02, 0x6c,
	0x85, 0x4e, 0xf1, 0x3f, 0xe6, 0x15, 0x5e, 0xdd, 0x56, 0x60, 0x92, 0xff, 0x39, 0xa7, 0x70, 0x1d,
	0xe7, 0xd9, 0xbf, 0x2a, 0xcc, 0xfe, 0x97, 0xca, 0x3a, 0xbb, 0xf3, 0xf6, 0xf4, 0x87, 0xd3, 0xf6,
	0xbb, 0x53, 0xbf, 0xd9, 0x3a, 0x3b, 0x3a, 0x68, 0xf9, 0xfd, 0xf7, 0x9d, 0x56, 0xed, 0x33, 0x5e,
	0x63, 0xab, 0xfb, 0x87, 0xad, 0xa3, 0xc3, 0xa3, 0x96, 0x7f, 0xda, 0x38, 0x6d, 0xd7, 0x2a, 0x7c,
	0x8d, 0x2d, 0xf7, 0xda, 0xc7, 0x8d, 0xee, 0x41, 0xa3, 0xd7, 0xaf, 0x5d, 0xe3, 0xcb, 0xec, 0x46,
	0xbf, 0xdf, 0xe8, 0x74, 0x6a, 0x9f, 0x73, 0xc6, 0x6e, 0xf6, 0xfb, 0xa7, 0xed, 0x66, 0xab, 0x76,
	0x9d, 0x7e, 0x1f, 0x36, 0xfa, 0xad, 0xda, 0x0d, 0xbe, 0xc2, 0x96, 0xfa, 0xfd, 0x5e, 0xab, 0x7b,
	0xd6, 0xaa, 0xdd, 0xe4, 0xb7, 0x18, 0x23, 0xd0, 0x39, 0x3a, 0x3d, 0xac, 0x2d, 0x3d, 0x7b, 0xc1,
	0xac, 0xff, 0x7d, 0xac, 0xb2, 0xea, 0x69, 0xdb, 0xef, 0xb6, 0x3a, 0xc7, 0xef, 0x6b, 0x9f, 0x69,
	0xbf, 0xc6, 0xf1, 0x71, 0xfb, 0x5d, 0xab, 0x59, 0xab, 0xfc, 0x27, 0x00, 0x00, 0xff, 0xff, 0xb1,
	0xb4, 0x60, 0x80, 0x54, 0x12, 0x00, 0x00,
}
