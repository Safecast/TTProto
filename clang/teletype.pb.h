/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.5 at Sat Jun 18 16:21:04 2016. */

#ifndef PB_TELETYPE_PB_H_INCLUDED
#define PB_TELETYPE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _teletype_Telecast_deviceType {
    teletype_Telecast_deviceType_UNKNOWN_DEVICE_TYPE = 0,
    teletype_Telecast_deviceType_BGEIGIE_NANO = 1,
    teletype_Telecast_deviceType_SIMPLECAST = 2,
    teletype_Telecast_deviceType_TTAPP = 3,
    teletype_Telecast_deviceType_TTRELAY = 4,
    teletype_Telecast_deviceType_TTGATE = 5
} teletype_Telecast_deviceType;

typedef enum _teletype_Telecast_unit {
    teletype_Telecast_unit_UNKNOWN_UNIT = 0,
    teletype_Telecast_unit_CPM = 1
} teletype_Telecast_unit;

/* Struct definitions */
typedef struct _teletype_Telecast {
    teletype_Telecast_deviceType DeviceType;
    bool has_DeviceIDString;
    char DeviceIDString[32];
    bool has_DeviceIDNumber;
    uint32_t DeviceIDNumber;
    bool has_Message;
    char Message[250];
    bool has_CapturedAt;
    char CapturedAt[40];
    bool has_Unit;
    teletype_Telecast_unit Unit;
    bool has_Value;
    uint32_t Value;
    bool has_Latitude;
    double Latitude;
    bool has_Longitude;
    double Longitude;
    bool has_Altitude;
    uint32_t Altitude;
    bool has_BatteryVoltage;
    double BatteryVoltage;
    bool has_BatterySOC;
    double BatterySOC;
    bool has_WirelessSNR;
    double WirelessSNR;
/* @@protoc_insertion_point(struct:teletype_Telecast) */
} teletype_Telecast;

/* Default values for struct fields */

/* Initializer values for message structs */
#define teletype_Telecast_init_default           {(teletype_Telecast_deviceType)0, false, "", false, 0, false, "", false, "", false, (teletype_Telecast_unit)0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define teletype_Telecast_init_zero              {(teletype_Telecast_deviceType)0, false, "", false, 0, false, "", false, "", false, (teletype_Telecast_unit)0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define teletype_Telecast_DeviceType_tag         1
#define teletype_Telecast_DeviceIDString_tag     2
#define teletype_Telecast_DeviceIDNumber_tag     3
#define teletype_Telecast_Message_tag            4
#define teletype_Telecast_CapturedAt_tag         5
#define teletype_Telecast_Unit_tag               6
#define teletype_Telecast_Value_tag              7
#define teletype_Telecast_Latitude_tag           8
#define teletype_Telecast_Longitude_tag          9
#define teletype_Telecast_Altitude_tag           10
#define teletype_Telecast_BatteryVoltage_tag     11
#define teletype_Telecast_BatterySOC_tag         12
#define teletype_Telecast_WirelessSNR_tag        13

/* Struct field encoding specification for nanopb */
extern const pb_field_t teletype_Telecast_fields[14];

/* Maximum encoded size of messages (where known) */
#define teletype_Telecast_size                   396

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define TELETYPE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
